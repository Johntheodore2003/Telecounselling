{"version":3,"sources":["components/Navbar.jsx","App.js","reportWebVitals.js","index.js"],"names":["Navbar","_jsxs","_Fragment","children","className","_jsx","src","alt","Link","to","socket","io","connect","App","me","setMe","useState","stream","setStream","receivingCall","setReceivingCall","caller","setCaller","callerSignal","setCallerSignal","callAccepted","setCallAccepted","callEnded","setCallEnded","idToCall","setIdToCall","myName","setMyName","callerName","setCallerName","role","setRole","concern","setConcern","myVideo","useRef","userVideo","connectionRef","useEffect","async","currentStream","navigator","mediaDevices","getUserMedia","video","audio","err","console","error","requestMedia","on","id","data","from","signal","name","off","current","srcObject","playsInline","ref","autoPlay","style","display","alignItems","justifyContent","color","muted","marginTop","TextField","label","variant","value","onChange","e","target","fullWidth","marginBottom","CopyToClipboard","text","Button","startIcon","AssignmentIcon","backgroundColor","onClick","leaveCall","_connectionRef$curren","destroy","window","location","reload","PhoneIcon","peer","Peer","initiator","trickle","emit","userToCall","signalData","remoteStream","callUser","answerCall","textAlign","paddingTop","gap","background","padding","borderRadius","cursor","width","transition","onMouseEnter","currentTarget","transform","onMouseLeave","fontSize","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.7fde3cab.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction Navbar() {\n  return (\n    <>\n      <nav className=\"navbar\">\n        {/* Logo */}\n        <div className=\"logo-section\">\n          <img\n            src=\"/Logo.png\" // Replace with actual logo path\n            alt=\"MindWise Logo\"\n            className=\"logo-img\"\n          />\n          <div className=\"logo-text\">\n            <h1>Mind</h1>\n            <h1>Wise</h1>\n          </div>\n        </div>\n\n        {/* Navigation Links */}\n        <div className=\"nav-links\">\n          <Link to=\"/\" className=\"nav-link\">Home</Link>\n          <Link to=\"/consultation\" className=\"nav-link\">Consultation</Link>\n          <Link to=\"/survey\" className=\"nav-link\">Survey Modules</Link>\n          <Link to=\"/chatbot\" className=\"nav-link\">Chatbot</Link>\n          <Link to=\"/explore\" className=\"nav-link\">Explore</Link>\n        </div>\n\n        {/* Sign Up/Login Buttons */}\n        <div className=\"auth-buttons\">\n          <Link to=\"/signup\" className=\"signup-btn\">Sign Up</Link>\n          <Link to=\"/login\" className=\"login-btn\">Login</Link>\n\n          {/* Mobile Menu Icon */}\n          <button className=\"mobile-menu-btn\" aria-label=\"Open Menu\">\n            <span className=\"material-icons\">menu</span>\n          </button>\n        </div>\n      </nav>\n\n      <style>{`\n        /* Navbar container */\n        .navbar {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          background-color: #319795; /* teal-600 */\n          color: white;\n          padding: 1rem 1.5rem;\n          box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n          font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n        }\n\n        /* Logo section */\n        .logo-section {\n          display: flex;\n          align-items: center;\n          padding-left: 2rem;\n          gap: 0.375rem; /* ~6px */\n        }\n\n        .logo-img {\n          width: 52px;  /* roughly w-13 */\n          height: 44px; /* roughly h-11 */\n          object-fit: contain;\n        }\n\n        .logo-text {\n          display: flex;\n          flex-direction: column;\n          line-height: 1;\n        }\n\n        .logo-text h1 {\n          font-size: 1.125rem; /* text-lg */\n          font-family: monospace;\n          margin: 0;\n          line-height: 1;\n        }\n\n        /* Navigation links */\n        .nav-links {\n          display: none;\n          gap: 4rem; /* space-x-16 */\n          font-size: 1.125rem; /* text-lg */\n        }\n\n        .nav-link {\n          color: white;\n          text-decoration: none;\n          transition: color 0.3s, text-decoration 0.3s;\n        }\n\n        .nav-link:hover {\n          text-decoration: underline;\n          color: #81e6d9; /* teal-200 */\n        }\n\n        /* Show nav links on medium+ screens */\n        @media(min-width: 768px) {\n          .nav-links {\n            display: flex;\n          }\n          /* Show auth buttons except mobile menu on md+ */\n          .signup-btn, .login-btn {\n            display: inline-block;\n          }\n          .mobile-menu-btn {\n            display: none;\n          }\n        }\n\n        /* Auth buttons */\n        .auth-buttons {\n          display: flex;\n          align-items: center;\n          gap: 1rem;\n        }\n\n        .signup-btn {\n          background-color: white;\n          color: #319795; /* teal-600 */\n          font-weight: 600;\n          padding: 0.5rem 1rem;\n          border-radius: 0.5rem;\n          box-shadow: 0 2px 6px rgba(0,0,0,0.15);\n          text-decoration: none;\n          transition: background-color 0.3s;\n          display: none; /* hidden on small */\n        }\n\n        .signup-btn:hover {\n          background-color: #b2f5ea; /* teal-100 */\n        }\n\n        .login-btn {\n          background-color: #2c7a7b; /* teal-700 */\n          color: white;\n          font-weight: 600;\n          padding: 0.5rem 1rem;\n          border-radius: 0.5rem;\n          text-decoration: none;\n          transition: background-color 0.3s;\n          display: none; /* hidden on small */\n        }\n\n        .login-btn:hover {\n          background-color: #285e61; /* teal-800 */\n        }\n\n        /* Mobile menu button */\n        .mobile-menu-btn {\n          background: none;\n          border: none;\n          cursor: pointer;\n          color: white;\n          font-size: 2rem;\n          display: block; /* visible on small */\n        }\n      `}</style>\n    </>\n  );\n}\n\nexport default Navbar;","import React, { useEffect, useRef, useState } from \"react\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport Peer from \"simple-peer\";\nimport io from \"socket.io-client\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PhoneIcon from \"@material-ui/icons/Phone\";\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\nimport Navbar from \"./components/Navbar\";\nimport \"./App.css\";\n\nconst socket = io.connect(\"http://localhost:5001\");\n\nfunction App() {\n  const [me, setMe] = useState(\"\");\n  const [stream, setStream] = useState();\n  const [receivingCall, setReceivingCall] = useState(false);\n  const [caller, setCaller] = useState(\"\");\n  const [callerSignal, setCallerSignal] = useState();\n  const [callAccepted, setCallAccepted] = useState(false);\n  const [callEnded, setCallEnded] = useState(false);\n  const [idToCall, setIdToCall] = useState(\"\");\n  const [myName, setMyName] = useState(\"\");\n  const [callerName, setCallerName] = useState(\"\");\n  const [role, setRole] = useState(null);\n  const [concern, setConcern] = useState(\"\");\n\n  const myVideo = useRef();\n  const userVideo = useRef();\n  const connectionRef = useRef();\n\n  const requestMedia = async () => {\n    try {\n      const currentStream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\n      setStream(currentStream);\n    } catch (err) {\n      console.error(\"Media access denied:\", err);\n    }\n  };\n\n  useEffect(() => {\n    if (role) {\n      requestMedia();\n    }\n  }, [role]);\n\n  useEffect(() => {\n    socket.on(\"me\", (id) => setMe(id));\n    socket.on(\"callUser\", (data) => {\n      setReceivingCall(true);\n      setCaller(data.from);\n      setCallerSignal(data.signal);\n      setCallerName(data.name);\n    });\n\n    return () => {\n      socket.off(\"me\");\n      socket.off(\"callUser\");\n    };\n  }, []);\n\n  useEffect(() => {\n    if (myVideo.current && stream) {\n      myVideo.current.srcObject = stream;\n    }\n  }, [stream]);\n\n  const callUser = (id) => {\n    const peer = new Peer({ initiator: true, trickle: false, stream });\n\n    peer.on(\"signal\", (data) => {\n      socket.emit(\"callUser\", {\n        userToCall: id,\n        signalData: data,\n        from: me,\n        name: myName,\n      });\n    });\n\n    peer.on(\"stream\", (remoteStream) => {\n      if (userVideo.current) {\n        userVideo.current.srcObject = remoteStream;\n      }\n    });\n\n    socket.on(\"callAccepted\", (signal) => {\n      setCallAccepted(true);\n      peer.signal(signal);\n    });\n\n    connectionRef.current = peer;\n  };\n\n  const answerCall = () => {\n    setCallAccepted(true);\n    const peer = new Peer({ initiator: false, trickle: false, stream });\n\n    peer.on(\"signal\", (data) => {\n      socket.emit(\"answerCall\", { signal: data, to: caller });\n    });\n\n    peer.on(\"stream\", (remoteStream) => {\n      if (userVideo.current) {\n        userVideo.current.srcObject = remoteStream;\n      }\n    });\n\n    peer.signal(callerSignal);\n    connectionRef.current = peer;\n  };\n\n  const leaveCall = () => {\n    setCallEnded(true);\n    connectionRef.current?.destroy();\n    window.location.reload();\n  };\n\n  if (!role) {\n    return (\n      <>\n        <Navbar />\n        <div className=\"role-selection\" style={{ textAlign: \"center\", paddingTop: 60 }}>\n          <h2 style={{ marginBottom: 30 }}>Welcome to MindConnect</h2>\n          <p style={{ color: \"#666\", marginBottom: 40 }}>How would you like to continue?</p>\n          <div style={{ display: \"flex\", justifyContent: \"center\", gap: \"40px\" }}>\n            <div\n              onClick={() => setRole(\"doctor\")}\n              style={{\n                background: \"#e0f7f1\",\n                padding: \"30px 40px\",\n                borderRadius: 16,\n                cursor: \"pointer\",\n                width: 220,\n                transition: \"all 0.3s ease\",\n              }}\n              onMouseEnter={(e) => (e.currentTarget.style.transform = \"scale(1.05)\")}\n              onMouseLeave={(e) => (e.currentTarget.style.transform = \"scale(1)\")}\n            >\n              <h3>🧑‍⚕️ Doctor</h3>\n              <p style={{ fontSize: \"14px\", color: \"#444\" }}>Start as a professional</p>\n            </div>\n\n            <div\n              onClick={() => setRole(\"patient\")}\n              style={{\n                background: \"#e8ecff\",\n                padding: \"30px 40px\",\n                borderRadius: 16,\n                cursor: \"pointer\",\n                width: 220,\n                transition: \"all 0.3s ease\",\n              }}\n              onMouseEnter={(e) => (e.currentTarget.style.transform = \"scale(1.05)\")}\n              onMouseLeave={(e) => (e.currentTarget.style.transform = \"scale(1)\")}\n            >\n              <h3>🙋 Patient</h3>\n              <p style={{ fontSize: \"14px\", color: \"#444\" }}>Connect for a session</p>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Navbar />\n      <div className=\"container\">\n        <h1 className=\"heading\">MindConnect - Secure Video Consultation</h1>\n        <div className=\"glass-card\">\n          <div className=\"video-container\">\n            {/* Remote video (full size) with name tag */}\n            {callAccepted && !callEnded ? (\n              <div className=\"video-wrapper\">\n                <video\n                  playsInline\n                  ref={userVideo}\n                  autoPlay\n                  className=\"remote-video\"\n                />\n                {/* Show name only if callerName exists, else no label */}\n                {callerName && <div className=\"name-tag\">{callerName}</div>}\n              </div>\n            ) : (\n              <div\n                className=\"remote-video\"\n                style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", color: \"#ccc\" }}\n              >\n                Waiting for connection...\n              </div>\n            )}\n\n            {/* Local video (small overlay) with name tag */}\n            <div className=\"video-wrapper local-video-wrapper\">\n              <video\n                playsInline\n                muted\n                ref={myVideo}\n                autoPlay\n                className=\"local-video\"\n              />\n              {/* Show name only if myName exists, else no label */}\n              {myName && <div className=\"name-tag local-name-tag\">{myName}</div>}\n            </div>\n          </div>\n\n          <div style={{ marginTop: 30 }}>\n            <TextField\n              label=\"Your Name\"\n              variant=\"filled\"\n              value={myName}\n              onChange={(e) => setMyName(e.target.value)}\n              fullWidth\n              style={{ marginBottom: 16 }}\n            />\n\n            {role === \"patient\" && (\n              <>\n                <TextField\n                  label=\"What brings you here today?\"\n                  variant=\"filled\"\n                  value={concern}\n                  onChange={(e) => setConcern(e.target.value)}\n                  fullWidth\n                  style={{ marginBottom: 16 }}\n                />\n\n                <TextField\n                  label=\"Doctor ID\"\n                  variant=\"filled\"\n                  value={idToCall}\n                  onChange={(e) => setIdToCall(e.target.value)}\n                  fullWidth\n                  style={{ marginBottom: 20 }}\n                />\n              </>\n            )}\n\n            {role === \"doctor\" && (\n              <CopyToClipboard text={me}>\n                <Button\n                  variant=\"contained\"\n                  startIcon={<AssignmentIcon />}\n                  style={{ backgroundColor: \"#2f8673\", color: \"white\", marginBottom: 16 }}\n                  fullWidth\n                >\n                  Copy Your Doctor ID\n                </Button>\n              </CopyToClipboard>\n            )}\n\n            <div>\n              {callAccepted && !callEnded ? (\n                <Button variant=\"contained\" color=\"secondary\" onClick={leaveCall} fullWidth>\n                  End Consultation\n                </Button>\n              ) : role === \"patient\" ? (\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  startIcon={<PhoneIcon />}\n                  onClick={() => callUser(idToCall)}\n                  fullWidth\n                >\n                  Join Consultation\n                </Button>\n              ) : null}\n            </div>\n\n            {receivingCall && !callAccepted && (\n              <div style={{ marginTop: 20 }}>\n                <h2>{callerName || \"Someone\"} is calling...</h2>\n                <Button\n                  variant=\"contained\"\n                  style={{ backgroundColor: \"#2f8673\", color: \"white\" }}\n                  onClick={answerCall}\n                  fullWidth\n                >\n                  Accept Consultation\n                </Button>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';  // Import BrowserRouter\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>           {/* Wrap App with BrowserRouter */}\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();"],"sourceRoot":""}